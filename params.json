{"name":"Final-project","body":"# **Leonardo's central-plan church**\r\n\r\nThe object of this project is to model a _Leonardo's central-plan church_ with [plasm.js](http://cvdlab.github.com/plasm.js)\r\n\r\n![Model of a Leonardo's central-plan church](https://github.com/cvdlab-cg/403266/raw/master/final-project/00026_02.jpg)\r\n\r\n***\r\n\r\nThe entire code of this project is in [LeonardoCentralPlanChurch.js](https://raw.github.com/cvdlab-cg/403266/master/final-project/LeonardoCentralPlanChurch.js)\r\n\r\nThe code is organized in three parts:\r\n1. first one is the declaration of all variables that basically controls the dimensions and some shaping (for instance, the number of ribs in the cupolas);\r\n2. the second one is the declaration of all functions that are subsequently used;\r\n3. the last part is the core part, that use the precedent definitions to reach the project goal.\r\n\r\nThe core part is subdivided into three phase: 1. Building of the structures; 2. Insert into plasm model, scale and place each structure; 3. Show the result.\r\n\r\n***\r\n\r\nI searched information about Leonardo's central-plan churchs, but I didn't find detailed plants. So I just tried to build the model in the first photo (that is one the few with large amount of pixels. [Found here (italian page)](http://www.museoscienza.org/dipartimenti/catalogo_collezioni/scheda_oggetto.asp?idk_in=ST070-00051&arg=Leonardo)\r\n\r\n***\r\n\r\nThe more complex function is BuildRibbedCupola() that can build a model of a cupola with rib (and can generate part of cupola), and can generate Round Arch and other kind of arch simply varing a parameter. This function has been used to generate the five cupolas that are round arch, and the top above the main cupola is a cupola with  Lancet Arch with 16 ribs.\r\n\r\nAnother complex function is FillPolys() that combines a sequence of polygons two by two: creates an edge between the n-th vertex in the first polygon and the n-th vertex in the second polygon, and then fills these newly created faces. Furthermore, also fills the face formed by the first and the last polygon. Anyway I found that this kind of implementation is too computational intensive for plasm.js, it should be coded better.\r\n\r\nIn the phase that show the result I used the object p.controls.controls.object.position to control the position (x,y,z) of the camera (the point of view).\r\nIf the debugging variable doshow is set to true and the frame per second of the viewer are high enough then it is possibile to view a construction piece by piece of the building, because of the technique used to generate the model: an array of plasm models, that are shown, using setTimeout() technique, one by one every 500 ms (the value of the variable \"time\").\r\n\r\n***\r\n\r\nThe project is not finished yet, but I used a lot of the tecniques learned during the course of Computational Graphics\r\n\r\n***\r\n\r\n### Screen shots\r\n\r\nScreen shot of the central plan church modeled\r\n![](https://github.com/cvdlab-cg/403266/raw/master/final-project/screen-shot/CentralPlan_0.png)\r\n\r\nInside the main cupola, looking down\r\n![](https://github.com/cvdlab-cg/403266/raw/master/final-project/screen-shot/CentralPlan_Inside_MainCupola.png)\r\n\r\nUnder the main cupola, looking up\r\n![](https://github.com/cvdlab-cg/403266/raw/master/final-project/screen-shot/CentralPlan_Under_MainCupola.png)\r\n\r\nUnder one minor cupola, looking up-left, it is visible the rotating columns, one minor cupola and an error of building in the roof (the fast solution of two CUBOID() doesn't completely has resolved, and I have no more time to completely resolve it!).\r\n![](https://github.com/cvdlab-cg/403266/raw/master/final-project/screen-shot/CentralPlan_Under_MiniCupola.png)\r\n\r\nSimplified model, less computational intensive\r\n![](https://github.com/cvdlab-cg/403266/raw/master/final-project/screen-shot/CentralPlan_simply0.png)\r\n","tagline":"Final project 403266","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}